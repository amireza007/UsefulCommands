git init
git log --all --graph --decorate
git log --all --graph --decorate --oneline

move around your version and history
git checkout ... 

-create a branch 
git checkout -b ...

-for setting up a branch to track a remote branch use this:
git branch --set-upstream-to=<remote branch> <local branch>
-Then what it enables you to do is this:
git pull <remote> <local branch>

checkout difference made to a file 
- git diff ... 

to revert the changes (including created files, which results in the exact files after the previous commit!)
-git revert ID

for updating the branch
-git pull

for showing remote branch in another machine
-git remote show

-for updating the remote branch (which is not only in local directory,
-but in the github the use of which could be exploited by -u)
git push -u origin main


1.(UNDO-ing): Revert back the last commit: git reset --soft HEAD~
Do the changes.
Add your files to the staging area: git add <filenames or paths> or git add --all
(REDO-ing): Do the commit: git commit -c ORIG_HEAD or git commit -C ORIG_HEAD

-for force undoing (and deleting) unstaged files:
git stash save --keep-index --include-untracked
git stash drop

-for cloning a particular branch use this
git clone -b <branchname> <remote-repo-url>

-A shorter way of adding everythin and then committing
git commit -a -m '....'1
